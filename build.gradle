plugins {
    id 'java'
    id 'war'
    id "org.gretty" version "3.0.7"
    id "application"
    id "org.openapi.generator" version "5.3.0"
}

group 'egger.software'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    jerseyVersion = '2.34'
    swaggerVersion = '2.2.0'
    jettyVersion = '9.4.45.v20220203'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

application {
    mainClass.set("egger.software.restexamples.Main")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly("javax.servlet:javax.servlet-api:4.0.1")

    implementation("org.eclipse.jetty:jetty-server:${jettyVersion}")
    implementation("org.eclipse.jetty:jetty-servlet:${jettyVersion}")

    implementation("org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}")
    implementation("org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}")
    implementation("org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}")

    implementation("io.swagger.core.v3:swagger-jaxrs2:${swaggerVersion}")

    implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-xml-provider:2.12.2)")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.2)")

    implementation 'io.swagger:swagger-annotations:1.5.24'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.gsonfire:gson-fire:1.8.4'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation "jakarta.annotation:jakarta.annotation-api:1.3.5"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'


    testImplementation('junit:junit:4.13.2')
    testImplementation("org.hamcrest:hamcrest-all:1.3")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")

    testImplementation("org.mockito:mockito-core:4.4.0")

    testImplementation"org.glassfish.jersey.test-framework:jersey-test-framework-core:${jerseyVersion}"
    testImplementation"org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-inmemory:${jerseyVersion}"
}

sourceSets.main.java.srcDirs += "$buildDir/generated/src/main/java"

test {
    useJUnitPlatform()
}

task buildClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "java"
    inputSpec = "$rootDir/openapi.json".toString()
    outputDir = "$buildDir/generated/".toString()
    apiPackage = "egger.software.restexamples.api"
    invokerPackage = "egger.software.restexamples.invoker"
    modelPackage = "egger.software.restexamples.model"
    configOptions = [
            dateLibrary: "java8",
    ]
    globalProperties = [
            modelDocs: "false"
    ]
}

compileJava.dependsOn buildClient